{"ast":null,"code":"var _jsxFileName = \"/Users/ducdinh/Desktop/Nailed-it/client/src/components/DetailProfile/ModalEditCMT.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport \"./Style.css\";\nimport { FaStar } from \"react-icons/fa\";\nimport Modal from 'react-bootstrap/Modal';\nimport { AuthContext } from '../../context/AuthContext';\nimport { postUpdateReviews } from '../../api/reviews';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalEditCMT = props => {\n  _s();\n\n  const {\n    showModalEdit,\n    itemReviews,\n    onHandlerCloseModalEdit\n  } = props;\n  const colors = {\n    orange: \"#FFBA5A\",\n    grey: \"#a9a9a9\"\n  };\n  const {\n    token\n  } = useContext(AuthContext);\n  const [currentValue, setCurrentValue] = useState(1);\n  const [hoverValue, setHoverValue] = useState(undefined);\n  const [txt, setText] = useState('');\n  const [numberStar, setNumberStart] = useState(5);\n\n  const handleClick = value => {\n    setCurrentValue(value);\n  };\n\n  const handleMouseOver = newHoverValue => {\n    setHoverValue(newHoverValue);\n  };\n\n  const handleMouseLeave = () => {\n    setHoverValue(undefined);\n  };\n\n  React.useEffect(() => {\n    (() => {\n      if (itemReviews) {\n        console.log(itemReviews);\n        setText(itemReviews === null || itemReviews === void 0 ? void 0 : itemReviews.comment);\n        setNumberStart(itemReviews === null || itemReviews === void 0 ? void 0 : itemReviews.star);\n      }\n    })();\n  }, [itemReviews, showModalEdit]);\n\n  const onHandlerUpadte = () => {\n    if (txt === '') return toast.warning(\"Please complete all information\");\n\n    if (token) {\n      postUpdateReviews(itemReviews._id, currentValue, txt, token).then(result => {\n        var _result$data;\n\n        if ((result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.status) === \"success\") {\n          toast.success(\"Update reviews success\");\n          window.location.reload();\n          return;\n        }\n\n        toast.error(\"Update reviews fail\");\n      }).catch(e => {\n        toast.error(\"Update reviews fail\");\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: showModalEdit,\n    onHide: onHandlerCloseModalEdit,\n    size: \"md\",\n    className: \"containerModalReviews\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Edit Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.stars,\n          children: Array(5).fill(0).map((_, index) => {\n            return /*#__PURE__*/_jsxDEV(FaStar, {\n              size: 24,\n              onClick: () => handleClick(index + 1),\n              onMouseOver: () => handleMouseOver(index + 1),\n              onMouseLeave: handleMouseLeave,\n              color: (hoverValue || currentValue) > index ? colors.orange : colors.grey,\n              style: {\n                marginRight: 10,\n                cursor: \"pointer\"\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textareaUpdateReviews\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"What's your experience?\",\n            style: styles.textarea,\n            rows: \"5\",\n            onChange: e => setText(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"containerBtnReviews\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.button,\n            onClick: () => onHandlerUpadte(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(\"buton\", {\n        variant: \"secondary\",\n        onClick: onHandlerCloseModalEdit,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalEditCMT, \"RulcMuCTsQ9VJAW2bBtc5IzaXLY=\");\n\n_c = ModalEditCMT;\nexport default _c2 = /*#__PURE__*/React.memo(ModalEditCMT);\nconst styles = {\n  button: {\n    marginLeft: '1rem'\n  }\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalEditCMT\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/ducdinh/Desktop/Nailed-it/client/src/components/DetailProfile/ModalEditCMT.js"],"names":["React","useContext","useState","FaStar","Modal","AuthContext","postUpdateReviews","toast","Button","ModalEditCMT","props","showModalEdit","itemReviews","onHandlerCloseModalEdit","colors","orange","grey","token","currentValue","setCurrentValue","hoverValue","setHoverValue","undefined","txt","setText","numberStar","setNumberStart","handleClick","value","handleMouseOver","newHoverValue","handleMouseLeave","useEffect","console","log","comment","star","onHandlerUpadte","warning","_id","then","result","data","status","success","window","location","reload","error","catch","e","styles","container","stars","Array","fill","map","_","index","marginRight","cursor","textarea","target","button","memo","marginLeft"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport \"./Style.css\";\nimport { FaStar } from \"react-icons/fa\";\nimport Modal from 'react-bootstrap/Modal'\nimport { AuthContext } from '../../context/AuthContext';\nimport { postUpdateReviews } from '../../api/reviews'\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button'\nconst ModalEditCMT = (props) => {\n    const { showModalEdit, itemReviews, onHandlerCloseModalEdit } = props\n    const colors = {\n        orange: \"#FFBA5A\",\n        grey: \"#a9a9a9\"\n    };\n\n    const { token } = useContext(AuthContext);\n    const [currentValue, setCurrentValue] = useState(1);\n    const [hoverValue, setHoverValue] = useState(undefined);\n    const [txt, setText] = useState('')\n    const [numberStar, setNumberStart] = useState(5);\n    const handleClick = value => {\n        setCurrentValue(value)\n    }\n\n    const handleMouseOver = newHoverValue => {\n        setHoverValue(newHoverValue)\n    };\n\n    const handleMouseLeave = () => {\n        setHoverValue(undefined)\n    }\n    React.useEffect(() => {\n        (() => {\n            if (itemReviews) {\n                console.log(itemReviews)\n                setText(itemReviews?.comment)\n                setNumberStart(itemReviews?.star)\n            }\n        })()\n    }, [itemReviews, showModalEdit])\n    const onHandlerUpadte = () => {\n        if (txt === '') return toast.warning(\"Please complete all information\")\n        if (token) {\n            postUpdateReviews(itemReviews._id, currentValue, txt, token).then((result) => {\n                if (result?.data?.status === \"success\") {\n                    toast.success(\"Update reviews success\")\n                    window.location.reload()\n                    return\n                }\n                toast.error(\"Update reviews fail\")\n            }).catch((e) => {\n                toast.error(\"Update reviews fail\")\n            })\n        }\n    }\n    return (\n        <Modal\n            show={showModalEdit} onHide={onHandlerCloseModalEdit}\n            size=\"md\"\n            className=\"containerModalReviews\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Edit Reviews</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div style={styles.container}>\n                    <div style={styles.stars}>\n                        {Array(5).fill(0).map((_, index) => {\n                            return (\n                                <FaStar\n                                    key={index}\n                                    size={24}\n                                    onClick={() => handleClick(index + 1)}\n                                    onMouseOver={() => handleMouseOver(index + 1)}\n                                    onMouseLeave={handleMouseLeave}\n                                    color={(hoverValue || currentValue) > index  ? colors.orange : colors.grey}\n                                    style={{\n                                        marginRight: 10,\n                                        cursor: \"pointer\"\n                                    }}\n                                />\n                            )\n                        })}\n                    </div>\n                    <div className='textareaUpdateReviews'>\n                        <textarea\n                            placeholder=\"What's your experience?\"\n                            style={styles.textarea}\n                            rows=\"5\"\n                            onChange={(e) => setText(e.target.value)}\n                            required\n                        />\n                    </div>\n\n                    <div className=\"containerBtnReviews\">\n                        <button\n                            style={styles.button}\n                            onClick={() => onHandlerUpadte()}\n                        >\n                            Submit\n                         </button>\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <buton variant=\"secondary\" onClick={onHandlerCloseModalEdit}>\n                    Close\n          </buton>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default React.memo(ModalEditCMT)\n\nconst styles = {\n    button: {\n        marginLeft: '1rem'\n    }\n};\n"]},"metadata":{},"sourceType":"module"}