{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from \"react\";\nimport CryptoJS from \"crypto-js\";\nexport const SECRET_KEY = 'kjsdfoqweoirsldfjkhsfoiwfjhasdfjkhs'; // let logoutTimer;\n\nfunction setCookie(name, value, expires) {\n  document.cookie = name + \"=\" + (value || \"\") + \"; expires=\" + expires + \"; path=/\";\n}\n\nfunction getCookie(name) {\n  var nameEQ = name + \"=\";\n  var ca = document.cookie.split(\";\");\n\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n\n    while (c.charAt(0) == \" \") c = c.substring(1, c.length);\n\n    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n  }\n\n  return null;\n}\n\nfunction eraseCookie(name) {\n  document.cookie = name + \"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n}\n\nexport const useAuth = () => {\n  _s();\n\n  const [token, setToken] = useState(false);\n  const [user, setUser] = useState({});\n  const login = useCallback((token, userData, expirationDate) => {\n    setToken(token);\n    setUser(userData);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setCookie(\"token\", token, tokenExpirationDate.toUTCString());\n    const cryptoText = CryptoJS.AES.encrypt(JSON.stringify(userData), SECRET_KEY).toString();\n    setCookie(\"userData\", cryptoText, tokenExpirationDate.toUTCString());\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    eraseCookie(\"userData\");\n  }, []);\n  useEffect(() => {\n    const token = getCookie(\"token\");\n    const userData = getCookie(\"userData\");\n\n    if (token && userData) {\n      const data = JSON.parse(CryptoJS.AES.decrypt(userData, SECRET_KEY).toString(CryptoJS.enc.Utf8));\n      login(token, data);\n    }\n  }, []);\n  return {\n    token,\n    login,\n    logout,\n    userData: user\n  };\n};\n\n_s(useAuth, \"o4BaEQZ5wheH0tNRsECl7HUg3ug=\");","map":{"version":3,"sources":["/Users/ducdinh/Desktop/Front-end/src/Hook/useAuth.js"],"names":["useState","useCallback","useEffect","CryptoJS","SECRET_KEY","setCookie","name","value","expires","document","cookie","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","eraseCookie","useAuth","token","setToken","user","setUser","login","userData","expirationDate","tokenExpirationDate","Date","getTime","toUTCString","cryptoText","AES","encrypt","JSON","stringify","toString","logout","data","parse","decrypt","enc","Utf8"],"mappings":"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","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport CryptoJS from \"crypto-js\";\nexport const SECRET_KEY = 'kjsdfoqweoirsldfjkhsfoiwfjhasdfjkhs';\n\n// let logoutTimer;\nfunction setCookie(name, value, expires) {\n  document.cookie =\n    name + \"=\" + (value || \"\") + \"; expires=\" + expires + \"; path=/\";\n}\nfunction getCookie(name) {\n  var nameEQ = name + \"=\";\n  var ca = document.cookie.split(\";\");\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) == \" \") c = c.substring(1, c.length);\n    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n  }\n  return null;\n}\nfunction eraseCookie(name) {\n  document.cookie = name + \"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n}\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [user, setUser] = useState({});\n\n  const login = useCallback((token, userData, expirationDate) => {\n    setToken(token);\n    setUser(userData);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setCookie(\"token\", token, tokenExpirationDate.toUTCString());\n    const cryptoText = CryptoJS.AES.encrypt(\n      JSON.stringify(userData),\n      SECRET_KEY\n    ).toString();\n    setCookie(\"userData\", cryptoText, tokenExpirationDate.toUTCString());\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    eraseCookie(\"userData\");\n  }, []);\n  useEffect(() => {\n    const token = getCookie(\"token\");\n    const userData = getCookie(\"userData\");\n\n    if (token && userData) {\n      const data = JSON.parse(\n        CryptoJS.AES.decrypt(userData, SECRET_KEY).toString(CryptoJS.enc.Utf8)\n      );\n      login(token, data);\n    }\n  }, []);\n\n  return { token, login, logout, userData: user };\n};\n"]},"metadata":{},"sourceType":"module"}