{"ast":null,"code":"var _jsxFileName = \"/Users/ducdinh/Desktop/Nailed-it/client/src/components/DetailProfile/ModalGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport \"./Style.css\";\nimport { FaStar } from \"react-icons/fa\";\nimport Modal from 'react-bootstrap/Modal';\nimport { AuthContext } from './../../context/AuthContext';\nimport { createReview } from '../../api/reviews';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalGrid = props => {\n  _s();\n\n  const colors = {\n    orange: \"#FFBA5A\",\n    grey: \"#a9a9a9\"\n  };\n  const {\n    token\n  } = useContext(AuthContext);\n  const [currentValue, setCurrentValue] = useState(1);\n  const [hoverValue, setHoverValue] = useState(undefined);\n  const [txt, setText] = useState('');\n  const stars = Array(5).fill(0); // handle mouse\n\n  const handleClick = value => {\n    setCurrentValue(value);\n  };\n\n  const handleMouseOver = newHoverValue => {\n    setHoverValue(newHoverValue);\n  };\n\n  const handleMouseLeave = () => {\n    setHoverValue(undefined);\n  };\n\n  const handlerCreateReviews = () => {\n    if (txt === '') return toast.warning(\"Please complete all information\");\n\n    if (token) {\n      createReview(props.id, currentValue, txt, token).then(result => {\n        var _result$data;\n\n        if ((result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.status) === \"success\") {\n          toast.success(\"Thank you for reviews\");\n          props.setRevies(true);\n          props.handleClose();\n          window.location.reload();\n          return;\n        }\n\n        toast.error(\"Reviews fail\");\n      }).catch(e => {\n        toast.error(\"Reviews fail\");\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.show,\n    onHide: props.handleClose,\n    size: \"lg\",\n    className: \"containerModalReviews\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.stars,\n          children: stars.map((_, index) => {\n            return /*#__PURE__*/_jsxDEV(FaStar, {\n              size: 24,\n              onClick: () => handleClick(index + 1),\n              onMouseOver: () => handleMouseOver(index + 1),\n              onMouseLeave: handleMouseLeave,\n              color: (hoverValue || currentValue) > index ? colors.orange : colors.grey,\n              style: {\n                marginRight: 10,\n                cursor: \"pointer\"\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"What's your experience?\",\n          style: styles.textarea,\n          rows: \"5\",\n          onChange: e => setText(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"containerBtnReviews\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.button,\n            onClick: () => handlerCreateReviews(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(\"buton\", {\n        variant: \"secondary\",\n        onClick: props.handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalGrid, \"pkCyTkdDRRwpPu0kkPZ91dJgybE=\");\n\n_c = ModalGrid;\nexport default ModalGrid;\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  stars: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  textarea: {\n    border: \"1px solid #a9a9a9\",\n    borderRadius: 5,\n    padding: 10,\n    margin: \"20px 0\"\n  },\n  button: {\n    border: \"1px solid #a9a9a9\",\n    borderRadius: 5,\n    padding: 10\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalGrid\");","map":{"version":3,"sources":["/Users/ducdinh/Desktop/Nailed-it/client/src/components/DetailProfile/ModalGrid.js"],"names":["React","useContext","useState","FaStar","Modal","AuthContext","createReview","toast","ModalGrid","props","colors","orange","grey","token","currentValue","setCurrentValue","hoverValue","setHoverValue","undefined","txt","setText","stars","Array","fill","handleClick","value","handleMouseOver","newHoverValue","handleMouseLeave","handlerCreateReviews","warning","id","then","result","data","status","success","setRevies","handleClose","window","location","reload","error","catch","e","show","styles","container","map","_","index","marginRight","cursor","textarea","target","button","display","flexDirection","alignItems","border","borderRadius","padding","margin"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport \"./Style.css\";\nimport { FaStar } from \"react-icons/fa\";\nimport Modal from 'react-bootstrap/Modal'\nimport { AuthContext } from './../../context/AuthContext';\nimport { createReview } from '../../api/reviews'\nimport { toast } from 'react-toastify';\nconst ModalGrid = (props) => {\n    const colors = {\n        orange: \"#FFBA5A\",\n        grey: \"#a9a9a9\"\n    };\n\n    const { token } = useContext(AuthContext);\n    const [currentValue, setCurrentValue] = useState(1);\n    const [hoverValue, setHoverValue] = useState(undefined);\n    const [txt, setText] = useState('')\n    const stars = Array(5).fill(0)\n\n    // handle mouse\n    const handleClick = value => {\n        setCurrentValue(value)\n    }\n\n    const handleMouseOver = newHoverValue => {\n        setHoverValue(newHoverValue)\n    };\n\n    const handleMouseLeave = () => {\n        setHoverValue(undefined)\n    }\n\n    const handlerCreateReviews = () => {\n        if (txt === '') return toast.warning(\"Please complete all information\")\n        if (token) {\n            createReview(props.id, currentValue, txt, token).then((result) => {\n                if (result?.data?.status === \"success\") {\n                    toast.success(\"Thank you for reviews\")\n                    props.setRevies(true)\n                    props.handleClose()\n                    window.location.reload()\n                    return\n                }\n                toast.error(\"Reviews fail\")\n            }).catch((e) => {\n                toast.error(\"Reviews fail\")\n            })\n        }\n\n    }\n\n    return (\n        <Modal\n            show={props.show} onHide={props.handleClose}\n            size=\"lg\"\n            className=\"containerModalReviews\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Reviews</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div style={styles.container}>\n                    <div style={styles.stars}>\n                        {stars.map((_, index) => {\n                            return (\n                                <FaStar\n                                    key={index}\n                                    size={24}\n\n                                    onClick={() => handleClick(index + 1)}\n                                    onMouseOver={() => handleMouseOver(index + 1)}\n                                    onMouseLeave={handleMouseLeave}\n                                    color={(hoverValue || currentValue) > index ? colors.orange : colors.grey}\n                                    style={{\n                                        marginRight: 10,\n                                        cursor: \"pointer\"\n                                    }}\n                                />\n                            )\n                        })}\n                    </div>\n                    <textarea\n                        placeholder=\"What's your experience?\"\n                        style={styles.textarea}\n                        rows=\"5\"\n                        onChange={(e) => setText(e.target.value)}\n                        required\n                    />\n                    <div className=\"containerBtnReviews\">\n                        <button\n                            style={styles.button}\n                            onClick={() => handlerCreateReviews()}\n                        >\n                            Submit\n                         </button>\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <buton variant=\"secondary\" onClick={props.handleClose}>\n                    Close\n          </buton>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default ModalGrid\n\nconst styles = {\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    stars: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    textarea: {\n        border: \"1px solid #a9a9a9\",\n        borderRadius: 5,\n        padding: 10,\n        margin: \"20px 0\",\n\n    },\n    button: {\n        border: \"1px solid #a9a9a9\",\n        borderRadius: 5,\n        padding: 10,\n    }\n};\n"]},"metadata":{},"sourceType":"module"}